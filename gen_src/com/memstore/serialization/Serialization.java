// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialization.proto

package com.memstore.serialization;

public final class Serialization {
  private Serialization() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class PBEntity extends
      com.google.protobuf.GeneratedMessage {
    // Use PBEntity.newBuilder() to construct.
    private PBEntity() {
      initFields();
    }
    private PBEntity(boolean noInit) {}
    
    private static final PBEntity defaultInstance;
    public static PBEntity getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBEntity getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntity_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntity_fieldAccessorTable;
    }
    
    // required uint32 bitmap = 2;
    public static final int BITMAP_FIELD_NUMBER = 2;
    private boolean hasBitmap;
    private int bitmap_ = 0;
    public boolean hasBitmap() { return hasBitmap; }
    public int getBitmap() { return bitmap_; }
    
    // repeated uint32 poolIndexes = 3;
    public static final int POOLINDEXES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> poolIndexes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPoolIndexesList() {
      return poolIndexes_;
    }
    public int getPoolIndexesCount() { return poolIndexes_.size(); }
    public int getPoolIndexes(int index) {
      return poolIndexes_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasBitmap) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBitmap()) {
        output.writeUInt32(2, getBitmap());
      }
      for (int element : getPoolIndexesList()) {
        output.writeUInt32(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBitmap()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getBitmap());
      }
      {
        int dataSize = 0;
        for (int element : getPoolIndexesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPoolIndexesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBEntity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBEntity result;
      
      // Construct using com.memstore.serialization.Serialization.PBEntity.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBEntity();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBEntity internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBEntity();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBEntity.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBEntity getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBEntity.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBEntity build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBEntity buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBEntity buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.poolIndexes_ != java.util.Collections.EMPTY_LIST) {
          result.poolIndexes_ =
            java.util.Collections.unmodifiableList(result.poolIndexes_);
        }
        com.memstore.serialization.Serialization.PBEntity returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBEntity) {
          return mergeFrom((com.memstore.serialization.Serialization.PBEntity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBEntity other) {
        if (other == com.memstore.serialization.Serialization.PBEntity.getDefaultInstance()) return this;
        if (other.hasBitmap()) {
          setBitmap(other.getBitmap());
        }
        if (!other.poolIndexes_.isEmpty()) {
          if (result.poolIndexes_.isEmpty()) {
            result.poolIndexes_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.poolIndexes_.addAll(other.poolIndexes_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 16: {
              setBitmap(input.readUInt32());
              break;
            }
            case 24: {
              addPoolIndexes(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addPoolIndexes(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // required uint32 bitmap = 2;
      public boolean hasBitmap() {
        return result.hasBitmap();
      }
      public int getBitmap() {
        return result.getBitmap();
      }
      public Builder setBitmap(int value) {
        result.hasBitmap = true;
        result.bitmap_ = value;
        return this;
      }
      public Builder clearBitmap() {
        result.hasBitmap = false;
        result.bitmap_ = 0;
        return this;
      }
      
      // repeated uint32 poolIndexes = 3;
      public java.util.List<java.lang.Integer> getPoolIndexesList() {
        return java.util.Collections.unmodifiableList(result.poolIndexes_);
      }
      public int getPoolIndexesCount() {
        return result.getPoolIndexesCount();
      }
      public int getPoolIndexes(int index) {
        return result.getPoolIndexes(index);
      }
      public Builder setPoolIndexes(int index, int value) {
        result.poolIndexes_.set(index, value);
        return this;
      }
      public Builder addPoolIndexes(int value) {
        if (result.poolIndexes_.isEmpty()) {
          result.poolIndexes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.poolIndexes_.add(value);
        return this;
      }
      public Builder addAllPoolIndexes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.poolIndexes_.isEmpty()) {
          result.poolIndexes_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.poolIndexes_);
        return this;
      }
      public Builder clearPoolIndexes() {
        result.poolIndexes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBEntity)
    }
    
    static {
      defaultInstance = new PBEntity(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBEntity)
  }
  
  public static final class PBEntityManager extends
      com.google.protobuf.GeneratedMessage {
    // Use PBEntityManager.newBuilder() to construct.
    private PBEntityManager() {
      initFields();
    }
    private PBEntityManager(boolean noInit) {}
    
    private static final PBEntityManager defaultInstance;
    public static PBEntityManager getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBEntityManager getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityManager_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityManager_fieldAccessorTable;
    }
    
    // repeated .com.memstore.PBEntityData entityData = 1;
    public static final int ENTITYDATA_FIELD_NUMBER = 1;
    private java.util.List<com.memstore.serialization.Serialization.PBEntityData> entityData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBEntityData> getEntityDataList() {
      return entityData_;
    }
    public int getEntityDataCount() { return entityData_.size(); }
    public com.memstore.serialization.Serialization.PBEntityData getEntityData(int index) {
      return entityData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.memstore.serialization.Serialization.PBEntityData element : getEntityDataList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.memstore.serialization.Serialization.PBEntityData element : getEntityDataList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.memstore.serialization.Serialization.PBEntityData element : getEntityDataList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityManager parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBEntityManager prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBEntityManager result;
      
      // Construct using com.memstore.serialization.Serialization.PBEntityManager.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBEntityManager();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBEntityManager internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBEntityManager();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBEntityManager.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBEntityManager getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBEntityManager.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBEntityManager build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBEntityManager buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBEntityManager buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.entityData_ != java.util.Collections.EMPTY_LIST) {
          result.entityData_ =
            java.util.Collections.unmodifiableList(result.entityData_);
        }
        com.memstore.serialization.Serialization.PBEntityManager returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBEntityManager) {
          return mergeFrom((com.memstore.serialization.Serialization.PBEntityManager)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBEntityManager other) {
        if (other == com.memstore.serialization.Serialization.PBEntityManager.getDefaultInstance()) return this;
        if (!other.entityData_.isEmpty()) {
          if (result.entityData_.isEmpty()) {
            result.entityData_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityData>();
          }
          result.entityData_.addAll(other.entityData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.memstore.serialization.Serialization.PBEntityData.Builder subBuilder = com.memstore.serialization.Serialization.PBEntityData.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntityData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.memstore.PBEntityData entityData = 1;
      public java.util.List<com.memstore.serialization.Serialization.PBEntityData> getEntityDataList() {
        return java.util.Collections.unmodifiableList(result.entityData_);
      }
      public int getEntityDataCount() {
        return result.getEntityDataCount();
      }
      public com.memstore.serialization.Serialization.PBEntityData getEntityData(int index) {
        return result.getEntityData(index);
      }
      public Builder setEntityData(int index, com.memstore.serialization.Serialization.PBEntityData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.entityData_.set(index, value);
        return this;
      }
      public Builder setEntityData(int index, com.memstore.serialization.Serialization.PBEntityData.Builder builderForValue) {
        result.entityData_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEntityData(com.memstore.serialization.Serialization.PBEntityData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.entityData_.isEmpty()) {
          result.entityData_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityData>();
        }
        result.entityData_.add(value);
        return this;
      }
      public Builder addEntityData(com.memstore.serialization.Serialization.PBEntityData.Builder builderForValue) {
        if (result.entityData_.isEmpty()) {
          result.entityData_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityData>();
        }
        result.entityData_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEntityData(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBEntityData> values) {
        if (result.entityData_.isEmpty()) {
          result.entityData_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityData>();
        }
        super.addAll(values, result.entityData_);
        return this;
      }
      public Builder clearEntityData() {
        result.entityData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBEntityManager)
    }
    
    static {
      defaultInstance = new PBEntityManager(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBEntityManager)
  }
  
  public static final class PBEntityData extends
      com.google.protobuf.GeneratedMessage {
    // Use PBEntityData.newBuilder() to construct.
    private PBEntityData() {
      initFields();
    }
    private PBEntityData(boolean noInit) {}
    
    private static final PBEntityData defaultInstance;
    public static PBEntityData getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBEntityData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityData_fieldAccessorTable;
    }
    
    // required .com.memstore.PBMetaData metaData = 1;
    public static final int METADATA_FIELD_NUMBER = 1;
    private boolean hasMetaData;
    private com.memstore.serialization.Serialization.PBMetaData metaData_;
    public boolean hasMetaData() { return hasMetaData; }
    public com.memstore.serialization.Serialization.PBMetaData getMetaData() { return metaData_; }
    
    // required string keyColumn = 2;
    public static final int KEYCOLUMN_FIELD_NUMBER = 2;
    private boolean hasKeyColumn;
    private java.lang.String keyColumn_ = "";
    public boolean hasKeyColumn() { return hasKeyColumn; }
    public java.lang.String getKeyColumn() { return keyColumn_; }
    
    // repeated .com.memstore.PBValue primaryIndexKey = 3;
    public static final int PRIMARYINDEXKEY_FIELD_NUMBER = 3;
    private java.util.List<com.memstore.serialization.Serialization.PBValue> primaryIndexKey_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBValue> getPrimaryIndexKeyList() {
      return primaryIndexKey_;
    }
    public int getPrimaryIndexKeyCount() { return primaryIndexKey_.size(); }
    public com.memstore.serialization.Serialization.PBValue getPrimaryIndexKey(int index) {
      return primaryIndexKey_.get(index);
    }
    
    // repeated .com.memstore.PBEntityTimeline entityTimeline = 4;
    public static final int ENTITYTIMELINE_FIELD_NUMBER = 4;
    private java.util.List<com.memstore.serialization.Serialization.PBEntityTimeline> entityTimeline_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBEntityTimeline> getEntityTimelineList() {
      return entityTimeline_;
    }
    public int getEntityTimelineCount() { return entityTimeline_.size(); }
    public com.memstore.serialization.Serialization.PBEntityTimeline getEntityTimeline(int index) {
      return entityTimeline_.get(index);
    }
    
    private void initFields() {
      metaData_ = com.memstore.serialization.Serialization.PBMetaData.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasMetaData) return false;
      if (!hasKeyColumn) return false;
      if (!getMetaData().isInitialized()) return false;
      for (com.memstore.serialization.Serialization.PBEntityTimeline element : getEntityTimelineList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMetaData()) {
        output.writeMessage(1, getMetaData());
      }
      if (hasKeyColumn()) {
        output.writeString(2, getKeyColumn());
      }
      for (com.memstore.serialization.Serialization.PBValue element : getPrimaryIndexKeyList()) {
        output.writeMessage(3, element);
      }
      for (com.memstore.serialization.Serialization.PBEntityTimeline element : getEntityTimelineList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMetaData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetaData());
      }
      if (hasKeyColumn()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getKeyColumn());
      }
      for (com.memstore.serialization.Serialization.PBValue element : getPrimaryIndexKeyList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.memstore.serialization.Serialization.PBEntityTimeline element : getEntityTimelineList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBEntityData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBEntityData result;
      
      // Construct using com.memstore.serialization.Serialization.PBEntityData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBEntityData();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBEntityData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBEntityData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBEntityData.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBEntityData getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBEntityData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBEntityData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBEntityData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBEntityData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.primaryIndexKey_ != java.util.Collections.EMPTY_LIST) {
          result.primaryIndexKey_ =
            java.util.Collections.unmodifiableList(result.primaryIndexKey_);
        }
        if (result.entityTimeline_ != java.util.Collections.EMPTY_LIST) {
          result.entityTimeline_ =
            java.util.Collections.unmodifiableList(result.entityTimeline_);
        }
        com.memstore.serialization.Serialization.PBEntityData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBEntityData) {
          return mergeFrom((com.memstore.serialization.Serialization.PBEntityData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBEntityData other) {
        if (other == com.memstore.serialization.Serialization.PBEntityData.getDefaultInstance()) return this;
        if (other.hasMetaData()) {
          mergeMetaData(other.getMetaData());
        }
        if (other.hasKeyColumn()) {
          setKeyColumn(other.getKeyColumn());
        }
        if (!other.primaryIndexKey_.isEmpty()) {
          if (result.primaryIndexKey_.isEmpty()) {
            result.primaryIndexKey_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBValue>();
          }
          result.primaryIndexKey_.addAll(other.primaryIndexKey_);
        }
        if (!other.entityTimeline_.isEmpty()) {
          if (result.entityTimeline_.isEmpty()) {
            result.entityTimeline_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimeline>();
          }
          result.entityTimeline_.addAll(other.entityTimeline_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.memstore.serialization.Serialization.PBMetaData.Builder subBuilder = com.memstore.serialization.Serialization.PBMetaData.newBuilder();
              if (hasMetaData()) {
                subBuilder.mergeFrom(getMetaData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMetaData(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setKeyColumn(input.readString());
              break;
            }
            case 26: {
              com.memstore.serialization.Serialization.PBValue.Builder subBuilder = com.memstore.serialization.Serialization.PBValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPrimaryIndexKey(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.memstore.serialization.Serialization.PBEntityTimeline.Builder subBuilder = com.memstore.serialization.Serialization.PBEntityTimeline.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEntityTimeline(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.memstore.PBMetaData metaData = 1;
      public boolean hasMetaData() {
        return result.hasMetaData();
      }
      public com.memstore.serialization.Serialization.PBMetaData getMetaData() {
        return result.getMetaData();
      }
      public Builder setMetaData(com.memstore.serialization.Serialization.PBMetaData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMetaData = true;
        result.metaData_ = value;
        return this;
      }
      public Builder setMetaData(com.memstore.serialization.Serialization.PBMetaData.Builder builderForValue) {
        result.hasMetaData = true;
        result.metaData_ = builderForValue.build();
        return this;
      }
      public Builder mergeMetaData(com.memstore.serialization.Serialization.PBMetaData value) {
        if (result.hasMetaData() &&
            result.metaData_ != com.memstore.serialization.Serialization.PBMetaData.getDefaultInstance()) {
          result.metaData_ =
            com.memstore.serialization.Serialization.PBMetaData.newBuilder(result.metaData_).mergeFrom(value).buildPartial();
        } else {
          result.metaData_ = value;
        }
        result.hasMetaData = true;
        return this;
      }
      public Builder clearMetaData() {
        result.hasMetaData = false;
        result.metaData_ = com.memstore.serialization.Serialization.PBMetaData.getDefaultInstance();
        return this;
      }
      
      // required string keyColumn = 2;
      public boolean hasKeyColumn() {
        return result.hasKeyColumn();
      }
      public java.lang.String getKeyColumn() {
        return result.getKeyColumn();
      }
      public Builder setKeyColumn(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKeyColumn = true;
        result.keyColumn_ = value;
        return this;
      }
      public Builder clearKeyColumn() {
        result.hasKeyColumn = false;
        result.keyColumn_ = getDefaultInstance().getKeyColumn();
        return this;
      }
      
      // repeated .com.memstore.PBValue primaryIndexKey = 3;
      public java.util.List<com.memstore.serialization.Serialization.PBValue> getPrimaryIndexKeyList() {
        return java.util.Collections.unmodifiableList(result.primaryIndexKey_);
      }
      public int getPrimaryIndexKeyCount() {
        return result.getPrimaryIndexKeyCount();
      }
      public com.memstore.serialization.Serialization.PBValue getPrimaryIndexKey(int index) {
        return result.getPrimaryIndexKey(index);
      }
      public Builder setPrimaryIndexKey(int index, com.memstore.serialization.Serialization.PBValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.primaryIndexKey_.set(index, value);
        return this;
      }
      public Builder setPrimaryIndexKey(int index, com.memstore.serialization.Serialization.PBValue.Builder builderForValue) {
        result.primaryIndexKey_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPrimaryIndexKey(com.memstore.serialization.Serialization.PBValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.primaryIndexKey_.isEmpty()) {
          result.primaryIndexKey_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBValue>();
        }
        result.primaryIndexKey_.add(value);
        return this;
      }
      public Builder addPrimaryIndexKey(com.memstore.serialization.Serialization.PBValue.Builder builderForValue) {
        if (result.primaryIndexKey_.isEmpty()) {
          result.primaryIndexKey_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBValue>();
        }
        result.primaryIndexKey_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPrimaryIndexKey(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBValue> values) {
        if (result.primaryIndexKey_.isEmpty()) {
          result.primaryIndexKey_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBValue>();
        }
        super.addAll(values, result.primaryIndexKey_);
        return this;
      }
      public Builder clearPrimaryIndexKey() {
        result.primaryIndexKey_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.memstore.PBEntityTimeline entityTimeline = 4;
      public java.util.List<com.memstore.serialization.Serialization.PBEntityTimeline> getEntityTimelineList() {
        return java.util.Collections.unmodifiableList(result.entityTimeline_);
      }
      public int getEntityTimelineCount() {
        return result.getEntityTimelineCount();
      }
      public com.memstore.serialization.Serialization.PBEntityTimeline getEntityTimeline(int index) {
        return result.getEntityTimeline(index);
      }
      public Builder setEntityTimeline(int index, com.memstore.serialization.Serialization.PBEntityTimeline value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.entityTimeline_.set(index, value);
        return this;
      }
      public Builder setEntityTimeline(int index, com.memstore.serialization.Serialization.PBEntityTimeline.Builder builderForValue) {
        result.entityTimeline_.set(index, builderForValue.build());
        return this;
      }
      public Builder addEntityTimeline(com.memstore.serialization.Serialization.PBEntityTimeline value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.entityTimeline_.isEmpty()) {
          result.entityTimeline_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimeline>();
        }
        result.entityTimeline_.add(value);
        return this;
      }
      public Builder addEntityTimeline(com.memstore.serialization.Serialization.PBEntityTimeline.Builder builderForValue) {
        if (result.entityTimeline_.isEmpty()) {
          result.entityTimeline_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimeline>();
        }
        result.entityTimeline_.add(builderForValue.build());
        return this;
      }
      public Builder addAllEntityTimeline(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBEntityTimeline> values) {
        if (result.entityTimeline_.isEmpty()) {
          result.entityTimeline_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimeline>();
        }
        super.addAll(values, result.entityTimeline_);
        return this;
      }
      public Builder clearEntityTimeline() {
        result.entityTimeline_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBEntityData)
    }
    
    static {
      defaultInstance = new PBEntityData(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBEntityData)
  }
  
  public static final class PBMetaData extends
      com.google.protobuf.GeneratedMessage {
    // Use PBMetaData.newBuilder() to construct.
    private PBMetaData() {
      initFields();
    }
    private PBMetaData(boolean noInit) {}
    
    private static final PBMetaData defaultInstance;
    public static PBMetaData getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBMetaData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBMetaData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBMetaData_fieldAccessorTable;
    }
    
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated .com.memstore.PBStringIntPair columnToIndex = 2;
    public static final int COLUMNTOINDEX_FIELD_NUMBER = 2;
    private java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> columnToIndex_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> getColumnToIndexList() {
      return columnToIndex_;
    }
    public int getColumnToIndexCount() { return columnToIndex_.size(); }
    public com.memstore.serialization.Serialization.PBStringIntPair getColumnToIndex(int index) {
      return columnToIndex_.get(index);
    }
    
    // repeated .com.memstore.PBStringIntPair indexToColumn = 3;
    public static final int INDEXTOCOLUMN_FIELD_NUMBER = 3;
    private java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> indexToColumn_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> getIndexToColumnList() {
      return indexToColumn_;
    }
    public int getIndexToColumnCount() { return indexToColumn_.size(); }
    public com.memstore.serialization.Serialization.PBStringIntPair getIndexToColumn(int index) {
      return indexToColumn_.get(index);
    }
    
    // repeated .com.memstore.PBStringIntPair indexToType = 4;
    public static final int INDEXTOTYPE_FIELD_NUMBER = 4;
    private java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> indexToType_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> getIndexToTypeList() {
      return indexToType_;
    }
    public int getIndexToTypeCount() { return indexToType_.size(); }
    public com.memstore.serialization.Serialization.PBStringIntPair getIndexToType(int index) {
      return indexToType_.get(index);
    }
    
    // repeated string notPooledColumns = 5;
    public static final int NOTPOOLEDCOLUMNS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.String> notPooledColumns_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getNotPooledColumnsList() {
      return notPooledColumns_;
    }
    public int getNotPooledColumnsCount() { return notPooledColumns_.size(); }
    public java.lang.String getNotPooledColumns(int index) {
      return notPooledColumns_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasName) return false;
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getColumnToIndexList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getIndexToColumnList()) {
        if (!element.isInitialized()) return false;
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getIndexToTypeList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasName()) {
        output.writeString(1, getName());
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getColumnToIndexList()) {
        output.writeMessage(2, element);
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getIndexToColumnList()) {
        output.writeMessage(3, element);
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getIndexToTypeList()) {
        output.writeMessage(4, element);
      }
      for (java.lang.String element : getNotPooledColumnsList()) {
        output.writeString(5, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getColumnToIndexList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getIndexToColumnList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.memstore.serialization.Serialization.PBStringIntPair element : getIndexToTypeList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getNotPooledColumnsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNotPooledColumnsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBMetaData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBMetaData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBMetaData result;
      
      // Construct using com.memstore.serialization.Serialization.PBMetaData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBMetaData();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBMetaData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBMetaData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBMetaData.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBMetaData getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBMetaData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBMetaData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBMetaData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBMetaData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.columnToIndex_ != java.util.Collections.EMPTY_LIST) {
          result.columnToIndex_ =
            java.util.Collections.unmodifiableList(result.columnToIndex_);
        }
        if (result.indexToColumn_ != java.util.Collections.EMPTY_LIST) {
          result.indexToColumn_ =
            java.util.Collections.unmodifiableList(result.indexToColumn_);
        }
        if (result.indexToType_ != java.util.Collections.EMPTY_LIST) {
          result.indexToType_ =
            java.util.Collections.unmodifiableList(result.indexToType_);
        }
        if (result.notPooledColumns_ != java.util.Collections.EMPTY_LIST) {
          result.notPooledColumns_ =
            java.util.Collections.unmodifiableList(result.notPooledColumns_);
        }
        com.memstore.serialization.Serialization.PBMetaData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBMetaData) {
          return mergeFrom((com.memstore.serialization.Serialization.PBMetaData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBMetaData other) {
        if (other == com.memstore.serialization.Serialization.PBMetaData.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.columnToIndex_.isEmpty()) {
          if (result.columnToIndex_.isEmpty()) {
            result.columnToIndex_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
          }
          result.columnToIndex_.addAll(other.columnToIndex_);
        }
        if (!other.indexToColumn_.isEmpty()) {
          if (result.indexToColumn_.isEmpty()) {
            result.indexToColumn_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
          }
          result.indexToColumn_.addAll(other.indexToColumn_);
        }
        if (!other.indexToType_.isEmpty()) {
          if (result.indexToType_.isEmpty()) {
            result.indexToType_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
          }
          result.indexToType_.addAll(other.indexToType_);
        }
        if (!other.notPooledColumns_.isEmpty()) {
          if (result.notPooledColumns_.isEmpty()) {
            result.notPooledColumns_ = new java.util.ArrayList<java.lang.String>();
          }
          result.notPooledColumns_.addAll(other.notPooledColumns_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              com.memstore.serialization.Serialization.PBStringIntPair.Builder subBuilder = com.memstore.serialization.Serialization.PBStringIntPair.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addColumnToIndex(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.memstore.serialization.Serialization.PBStringIntPair.Builder subBuilder = com.memstore.serialization.Serialization.PBStringIntPair.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIndexToColumn(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.memstore.serialization.Serialization.PBStringIntPair.Builder subBuilder = com.memstore.serialization.Serialization.PBStringIntPair.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIndexToType(subBuilder.buildPartial());
              break;
            }
            case 42: {
              addNotPooledColumns(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated .com.memstore.PBStringIntPair columnToIndex = 2;
      public java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> getColumnToIndexList() {
        return java.util.Collections.unmodifiableList(result.columnToIndex_);
      }
      public int getColumnToIndexCount() {
        return result.getColumnToIndexCount();
      }
      public com.memstore.serialization.Serialization.PBStringIntPair getColumnToIndex(int index) {
        return result.getColumnToIndex(index);
      }
      public Builder setColumnToIndex(int index, com.memstore.serialization.Serialization.PBStringIntPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.columnToIndex_.set(index, value);
        return this;
      }
      public Builder setColumnToIndex(int index, com.memstore.serialization.Serialization.PBStringIntPair.Builder builderForValue) {
        result.columnToIndex_.set(index, builderForValue.build());
        return this;
      }
      public Builder addColumnToIndex(com.memstore.serialization.Serialization.PBStringIntPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.columnToIndex_.isEmpty()) {
          result.columnToIndex_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        result.columnToIndex_.add(value);
        return this;
      }
      public Builder addColumnToIndex(com.memstore.serialization.Serialization.PBStringIntPair.Builder builderForValue) {
        if (result.columnToIndex_.isEmpty()) {
          result.columnToIndex_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        result.columnToIndex_.add(builderForValue.build());
        return this;
      }
      public Builder addAllColumnToIndex(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBStringIntPair> values) {
        if (result.columnToIndex_.isEmpty()) {
          result.columnToIndex_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        super.addAll(values, result.columnToIndex_);
        return this;
      }
      public Builder clearColumnToIndex() {
        result.columnToIndex_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.memstore.PBStringIntPair indexToColumn = 3;
      public java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> getIndexToColumnList() {
        return java.util.Collections.unmodifiableList(result.indexToColumn_);
      }
      public int getIndexToColumnCount() {
        return result.getIndexToColumnCount();
      }
      public com.memstore.serialization.Serialization.PBStringIntPair getIndexToColumn(int index) {
        return result.getIndexToColumn(index);
      }
      public Builder setIndexToColumn(int index, com.memstore.serialization.Serialization.PBStringIntPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.indexToColumn_.set(index, value);
        return this;
      }
      public Builder setIndexToColumn(int index, com.memstore.serialization.Serialization.PBStringIntPair.Builder builderForValue) {
        result.indexToColumn_.set(index, builderForValue.build());
        return this;
      }
      public Builder addIndexToColumn(com.memstore.serialization.Serialization.PBStringIntPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.indexToColumn_.isEmpty()) {
          result.indexToColumn_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        result.indexToColumn_.add(value);
        return this;
      }
      public Builder addIndexToColumn(com.memstore.serialization.Serialization.PBStringIntPair.Builder builderForValue) {
        if (result.indexToColumn_.isEmpty()) {
          result.indexToColumn_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        result.indexToColumn_.add(builderForValue.build());
        return this;
      }
      public Builder addAllIndexToColumn(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBStringIntPair> values) {
        if (result.indexToColumn_.isEmpty()) {
          result.indexToColumn_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        super.addAll(values, result.indexToColumn_);
        return this;
      }
      public Builder clearIndexToColumn() {
        result.indexToColumn_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.memstore.PBStringIntPair indexToType = 4;
      public java.util.List<com.memstore.serialization.Serialization.PBStringIntPair> getIndexToTypeList() {
        return java.util.Collections.unmodifiableList(result.indexToType_);
      }
      public int getIndexToTypeCount() {
        return result.getIndexToTypeCount();
      }
      public com.memstore.serialization.Serialization.PBStringIntPair getIndexToType(int index) {
        return result.getIndexToType(index);
      }
      public Builder setIndexToType(int index, com.memstore.serialization.Serialization.PBStringIntPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.indexToType_.set(index, value);
        return this;
      }
      public Builder setIndexToType(int index, com.memstore.serialization.Serialization.PBStringIntPair.Builder builderForValue) {
        result.indexToType_.set(index, builderForValue.build());
        return this;
      }
      public Builder addIndexToType(com.memstore.serialization.Serialization.PBStringIntPair value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.indexToType_.isEmpty()) {
          result.indexToType_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        result.indexToType_.add(value);
        return this;
      }
      public Builder addIndexToType(com.memstore.serialization.Serialization.PBStringIntPair.Builder builderForValue) {
        if (result.indexToType_.isEmpty()) {
          result.indexToType_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        result.indexToType_.add(builderForValue.build());
        return this;
      }
      public Builder addAllIndexToType(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBStringIntPair> values) {
        if (result.indexToType_.isEmpty()) {
          result.indexToType_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBStringIntPair>();
        }
        super.addAll(values, result.indexToType_);
        return this;
      }
      public Builder clearIndexToType() {
        result.indexToType_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string notPooledColumns = 5;
      public java.util.List<java.lang.String> getNotPooledColumnsList() {
        return java.util.Collections.unmodifiableList(result.notPooledColumns_);
      }
      public int getNotPooledColumnsCount() {
        return result.getNotPooledColumnsCount();
      }
      public java.lang.String getNotPooledColumns(int index) {
        return result.getNotPooledColumns(index);
      }
      public Builder setNotPooledColumns(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.notPooledColumns_.set(index, value);
        return this;
      }
      public Builder addNotPooledColumns(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.notPooledColumns_.isEmpty()) {
          result.notPooledColumns_ = new java.util.ArrayList<java.lang.String>();
        }
        result.notPooledColumns_.add(value);
        return this;
      }
      public Builder addAllNotPooledColumns(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.notPooledColumns_.isEmpty()) {
          result.notPooledColumns_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.notPooledColumns_);
        return this;
      }
      public Builder clearNotPooledColumns() {
        result.notPooledColumns_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBMetaData)
    }
    
    static {
      defaultInstance = new PBMetaData(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBMetaData)
  }
  
  public static final class PBStringIntPair extends
      com.google.protobuf.GeneratedMessage {
    // Use PBStringIntPair.newBuilder() to construct.
    private PBStringIntPair() {
      initFields();
    }
    private PBStringIntPair(boolean noInit) {}
    
    private static final PBStringIntPair defaultInstance;
    public static PBStringIntPair getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBStringIntPair getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBStringIntPair_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBStringIntPair_fieldAccessorTable;
    }
    
    // required string string = 1;
    public static final int STRING_FIELD_NUMBER = 1;
    private boolean hasString;
    private java.lang.String string_ = "";
    public boolean hasString() { return hasString; }
    public java.lang.String getString() { return string_; }
    
    // required uint32 int = 2;
    public static final int INT_FIELD_NUMBER = 2;
    private boolean hasInt;
    private int int_ = 0;
    public boolean hasInt() { return hasInt; }
    public int getInt() { return int_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasString) return false;
      if (!hasInt) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasString()) {
        output.writeString(1, getString());
      }
      if (hasInt()) {
        output.writeUInt32(2, getInt());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getString());
      }
      if (hasInt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, getInt());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBStringIntPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBStringIntPair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBStringIntPair result;
      
      // Construct using com.memstore.serialization.Serialization.PBStringIntPair.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBStringIntPair();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBStringIntPair internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBStringIntPair();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBStringIntPair.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBStringIntPair getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBStringIntPair.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBStringIntPair build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBStringIntPair buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBStringIntPair buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.memstore.serialization.Serialization.PBStringIntPair returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBStringIntPair) {
          return mergeFrom((com.memstore.serialization.Serialization.PBStringIntPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBStringIntPair other) {
        if (other == com.memstore.serialization.Serialization.PBStringIntPair.getDefaultInstance()) return this;
        if (other.hasString()) {
          setString(other.getString());
        }
        if (other.hasInt()) {
          setInt(other.getInt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setString(input.readString());
              break;
            }
            case 16: {
              setInt(input.readUInt32());
              break;
            }
          }
        }
      }
      
      
      // required string string = 1;
      public boolean hasString() {
        return result.hasString();
      }
      public java.lang.String getString() {
        return result.getString();
      }
      public Builder setString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasString = true;
        result.string_ = value;
        return this;
      }
      public Builder clearString() {
        result.hasString = false;
        result.string_ = getDefaultInstance().getString();
        return this;
      }
      
      // required uint32 int = 2;
      public boolean hasInt() {
        return result.hasInt();
      }
      public int getInt() {
        return result.getInt();
      }
      public Builder setInt(int value) {
        result.hasInt = true;
        result.int_ = value;
        return this;
      }
      public Builder clearInt() {
        result.hasInt = false;
        result.int_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBStringIntPair)
    }
    
    static {
      defaultInstance = new PBStringIntPair(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBStringIntPair)
  }
  
  public static final class PBEntityTimeline extends
      com.google.protobuf.GeneratedMessage {
    // Use PBEntityTimeline.newBuilder() to construct.
    private PBEntityTimeline() {
      initFields();
    }
    private PBEntityTimeline(boolean noInit) {}
    
    private static final PBEntityTimeline defaultInstance;
    public static PBEntityTimeline getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBEntityTimeline getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityTimeline_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityTimeline_fieldAccessorTable;
    }
    
    // repeated uint64 date = 1;
    public static final int DATE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> date_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getDateList() {
      return date_;
    }
    public int getDateCount() { return date_.size(); }
    public long getDate(int index) {
      return date_.get(index);
    }
    
    // repeated .com.memstore.PBEntityTimelineValue value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<com.memstore.serialization.Serialization.PBEntityTimelineValue> value_ =
      java.util.Collections.emptyList();
    public java.util.List<com.memstore.serialization.Serialization.PBEntityTimelineValue> getValueList() {
      return value_;
    }
    public int getValueCount() { return value_.size(); }
    public com.memstore.serialization.Serialization.PBEntityTimelineValue getValue(int index) {
      return value_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.memstore.serialization.Serialization.PBEntityTimelineValue element : getValueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (long element : getDateList()) {
        output.writeUInt64(1, element);
      }
      for (com.memstore.serialization.Serialization.PBEntityTimelineValue element : getValueList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (long element : getDateList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getDateList().size();
      }
      for (com.memstore.serialization.Serialization.PBEntityTimelineValue element : getValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimeline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBEntityTimeline prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBEntityTimeline result;
      
      // Construct using com.memstore.serialization.Serialization.PBEntityTimeline.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBEntityTimeline();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBEntityTimeline internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBEntityTimeline();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBEntityTimeline.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBEntityTimeline getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBEntityTimeline.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBEntityTimeline build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBEntityTimeline buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBEntityTimeline buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.date_ != java.util.Collections.EMPTY_LIST) {
          result.date_ =
            java.util.Collections.unmodifiableList(result.date_);
        }
        if (result.value_ != java.util.Collections.EMPTY_LIST) {
          result.value_ =
            java.util.Collections.unmodifiableList(result.value_);
        }
        com.memstore.serialization.Serialization.PBEntityTimeline returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBEntityTimeline) {
          return mergeFrom((com.memstore.serialization.Serialization.PBEntityTimeline)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBEntityTimeline other) {
        if (other == com.memstore.serialization.Serialization.PBEntityTimeline.getDefaultInstance()) return this;
        if (!other.date_.isEmpty()) {
          if (result.date_.isEmpty()) {
            result.date_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.date_.addAll(other.date_);
        }
        if (!other.value_.isEmpty()) {
          if (result.value_.isEmpty()) {
            result.value_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimelineValue>();
          }
          result.value_.addAll(other.value_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addDate(input.readUInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDate(input.readUInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              com.memstore.serialization.Serialization.PBEntityTimelineValue.Builder subBuilder = com.memstore.serialization.Serialization.PBEntityTimelineValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated uint64 date = 1;
      public java.util.List<java.lang.Long> getDateList() {
        return java.util.Collections.unmodifiableList(result.date_);
      }
      public int getDateCount() {
        return result.getDateCount();
      }
      public long getDate(int index) {
        return result.getDate(index);
      }
      public Builder setDate(int index, long value) {
        result.date_.set(index, value);
        return this;
      }
      public Builder addDate(long value) {
        if (result.date_.isEmpty()) {
          result.date_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.date_.add(value);
        return this;
      }
      public Builder addAllDate(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.date_.isEmpty()) {
          result.date_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.date_);
        return this;
      }
      public Builder clearDate() {
        result.date_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.memstore.PBEntityTimelineValue value = 2;
      public java.util.List<com.memstore.serialization.Serialization.PBEntityTimelineValue> getValueList() {
        return java.util.Collections.unmodifiableList(result.value_);
      }
      public int getValueCount() {
        return result.getValueCount();
      }
      public com.memstore.serialization.Serialization.PBEntityTimelineValue getValue(int index) {
        return result.getValue(index);
      }
      public Builder setValue(int index, com.memstore.serialization.Serialization.PBEntityTimelineValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.value_.set(index, value);
        return this;
      }
      public Builder setValue(int index, com.memstore.serialization.Serialization.PBEntityTimelineValue.Builder builderForValue) {
        result.value_.set(index, builderForValue.build());
        return this;
      }
      public Builder addValue(com.memstore.serialization.Serialization.PBEntityTimelineValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimelineValue>();
        }
        result.value_.add(value);
        return this;
      }
      public Builder addValue(com.memstore.serialization.Serialization.PBEntityTimelineValue.Builder builderForValue) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimelineValue>();
        }
        result.value_.add(builderForValue.build());
        return this;
      }
      public Builder addAllValue(
          java.lang.Iterable<? extends com.memstore.serialization.Serialization.PBEntityTimelineValue> values) {
        if (result.value_.isEmpty()) {
          result.value_ = new java.util.ArrayList<com.memstore.serialization.Serialization.PBEntityTimelineValue>();
        }
        super.addAll(values, result.value_);
        return this;
      }
      public Builder clearValue() {
        result.value_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBEntityTimeline)
    }
    
    static {
      defaultInstance = new PBEntityTimeline(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBEntityTimeline)
  }
  
  public static final class PBEntityTimelineValue extends
      com.google.protobuf.GeneratedMessage {
    // Use PBEntityTimelineValue.newBuilder() to construct.
    private PBEntityTimelineValue() {
      initFields();
    }
    private PBEntityTimelineValue(boolean noInit) {}
    
    private static final PBEntityTimelineValue defaultInstance;
    public static PBEntityTimelineValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBEntityTimelineValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityTimelineValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBEntityTimelineValue_fieldAccessorTable;
    }
    
    // optional .com.memstore.Tombstone tombstone = 1;
    public static final int TOMBSTONE_FIELD_NUMBER = 1;
    private boolean hasTombstone;
    private com.memstore.serialization.Serialization.Tombstone tombstone_;
    public boolean hasTombstone() { return hasTombstone; }
    public com.memstore.serialization.Serialization.Tombstone getTombstone() { return tombstone_; }
    
    // optional .com.memstore.PBEntity entity = 2;
    public static final int ENTITY_FIELD_NUMBER = 2;
    private boolean hasEntity;
    private com.memstore.serialization.Serialization.PBEntity entity_;
    public boolean hasEntity() { return hasEntity; }
    public com.memstore.serialization.Serialization.PBEntity getEntity() { return entity_; }
    
    private void initFields() {
      tombstone_ = com.memstore.serialization.Serialization.Tombstone.getDefaultInstance();
      entity_ = com.memstore.serialization.Serialization.PBEntity.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasEntity()) {
        if (!getEntity().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTombstone()) {
        output.writeMessage(1, getTombstone());
      }
      if (hasEntity()) {
        output.writeMessage(2, getEntity());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTombstone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTombstone());
      }
      if (hasEntity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEntity());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBEntityTimelineValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBEntityTimelineValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBEntityTimelineValue result;
      
      // Construct using com.memstore.serialization.Serialization.PBEntityTimelineValue.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBEntityTimelineValue();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBEntityTimelineValue internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBEntityTimelineValue();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBEntityTimelineValue.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBEntityTimelineValue getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBEntityTimelineValue.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBEntityTimelineValue build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBEntityTimelineValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBEntityTimelineValue buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.memstore.serialization.Serialization.PBEntityTimelineValue returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBEntityTimelineValue) {
          return mergeFrom((com.memstore.serialization.Serialization.PBEntityTimelineValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBEntityTimelineValue other) {
        if (other == com.memstore.serialization.Serialization.PBEntityTimelineValue.getDefaultInstance()) return this;
        if (other.hasTombstone()) {
          mergeTombstone(other.getTombstone());
        }
        if (other.hasEntity()) {
          mergeEntity(other.getEntity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.memstore.serialization.Serialization.Tombstone.Builder subBuilder = com.memstore.serialization.Serialization.Tombstone.newBuilder();
              if (hasTombstone()) {
                subBuilder.mergeFrom(getTombstone());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTombstone(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.memstore.serialization.Serialization.PBEntity.Builder subBuilder = com.memstore.serialization.Serialization.PBEntity.newBuilder();
              if (hasEntity()) {
                subBuilder.mergeFrom(getEntity());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntity(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.memstore.Tombstone tombstone = 1;
      public boolean hasTombstone() {
        return result.hasTombstone();
      }
      public com.memstore.serialization.Serialization.Tombstone getTombstone() {
        return result.getTombstone();
      }
      public Builder setTombstone(com.memstore.serialization.Serialization.Tombstone value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTombstone = true;
        result.tombstone_ = value;
        return this;
      }
      public Builder setTombstone(com.memstore.serialization.Serialization.Tombstone.Builder builderForValue) {
        result.hasTombstone = true;
        result.tombstone_ = builderForValue.build();
        return this;
      }
      public Builder mergeTombstone(com.memstore.serialization.Serialization.Tombstone value) {
        if (result.hasTombstone() &&
            result.tombstone_ != com.memstore.serialization.Serialization.Tombstone.getDefaultInstance()) {
          result.tombstone_ =
            com.memstore.serialization.Serialization.Tombstone.newBuilder(result.tombstone_).mergeFrom(value).buildPartial();
        } else {
          result.tombstone_ = value;
        }
        result.hasTombstone = true;
        return this;
      }
      public Builder clearTombstone() {
        result.hasTombstone = false;
        result.tombstone_ = com.memstore.serialization.Serialization.Tombstone.getDefaultInstance();
        return this;
      }
      
      // optional .com.memstore.PBEntity entity = 2;
      public boolean hasEntity() {
        return result.hasEntity();
      }
      public com.memstore.serialization.Serialization.PBEntity getEntity() {
        return result.getEntity();
      }
      public Builder setEntity(com.memstore.serialization.Serialization.PBEntity value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntity = true;
        result.entity_ = value;
        return this;
      }
      public Builder setEntity(com.memstore.serialization.Serialization.PBEntity.Builder builderForValue) {
        result.hasEntity = true;
        result.entity_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntity(com.memstore.serialization.Serialization.PBEntity value) {
        if (result.hasEntity() &&
            result.entity_ != com.memstore.serialization.Serialization.PBEntity.getDefaultInstance()) {
          result.entity_ =
            com.memstore.serialization.Serialization.PBEntity.newBuilder(result.entity_).mergeFrom(value).buildPartial();
        } else {
          result.entity_ = value;
        }
        result.hasEntity = true;
        return this;
      }
      public Builder clearEntity() {
        result.hasEntity = false;
        result.entity_ = com.memstore.serialization.Serialization.PBEntity.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBEntityTimelineValue)
    }
    
    static {
      defaultInstance = new PBEntityTimelineValue(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBEntityTimelineValue)
  }
  
  public static final class Tombstone extends
      com.google.protobuf.GeneratedMessage {
    // Use Tombstone.newBuilder() to construct.
    private Tombstone() {
      initFields();
    }
    private Tombstone(boolean noInit) {}
    
    private static final Tombstone defaultInstance;
    public static Tombstone getDefaultInstance() {
      return defaultInstance;
    }
    
    public Tombstone getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_Tombstone_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_Tombstone_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.Tombstone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.Tombstone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.Tombstone prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.Tombstone result;
      
      // Construct using com.memstore.serialization.Serialization.Tombstone.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.Tombstone();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.Tombstone internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.Tombstone();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.Tombstone.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.Tombstone getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.Tombstone.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.Tombstone build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.Tombstone buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.Tombstone buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.memstore.serialization.Serialization.Tombstone returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.Tombstone) {
          return mergeFrom((com.memstore.serialization.Serialization.Tombstone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.Tombstone other) {
        if (other == com.memstore.serialization.Serialization.Tombstone.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:com.memstore.Tombstone)
    }
    
    static {
      defaultInstance = new Tombstone(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.Tombstone)
  }
  
  public static final class PBValue extends
      com.google.protobuf.GeneratedMessage {
    // Use PBValue.newBuilder() to construct.
    private PBValue() {
      initFields();
    }
    private PBValue(boolean noInit) {}
    
    private static final PBValue defaultInstance;
    public static PBValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public PBValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.memstore.serialization.Serialization.internal_static_com_memstore_PBValue_fieldAccessorTable;
    }
    
    // optional string string = 1;
    public static final int STRING_FIELD_NUMBER = 1;
    private boolean hasString;
    private java.lang.String string_ = "";
    public boolean hasString() { return hasString; }
    public java.lang.String getString() { return string_; }
    
    // optional int32 int = 2;
    public static final int INT_FIELD_NUMBER = 2;
    private boolean hasInt;
    private int int_ = 0;
    public boolean hasInt() { return hasInt; }
    public int getInt() { return int_; }
    
    // optional int64 long = 3;
    public static final int LONG_FIELD_NUMBER = 3;
    private boolean hasLong;
    private long long_ = 0L;
    public boolean hasLong() { return hasLong; }
    public long getLong() { return long_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasString()) {
        output.writeString(1, getString());
      }
      if (hasInt()) {
        output.writeInt32(2, getInt());
      }
      if (hasLong()) {
        output.writeInt64(3, getLong());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getString());
      }
      if (hasInt()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getInt());
      }
      if (hasLong()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getLong());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.memstore.serialization.Serialization.PBValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.memstore.serialization.Serialization.PBValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.memstore.serialization.Serialization.PBValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.memstore.serialization.Serialization.PBValue result;
      
      // Construct using com.memstore.serialization.Serialization.PBValue.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.memstore.serialization.Serialization.PBValue();
        return builder;
      }
      
      protected com.memstore.serialization.Serialization.PBValue internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.memstore.serialization.Serialization.PBValue();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.memstore.serialization.Serialization.PBValue.getDescriptor();
      }
      
      public com.memstore.serialization.Serialization.PBValue getDefaultInstanceForType() {
        return com.memstore.serialization.Serialization.PBValue.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.memstore.serialization.Serialization.PBValue build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.memstore.serialization.Serialization.PBValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.memstore.serialization.Serialization.PBValue buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.memstore.serialization.Serialization.PBValue returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.memstore.serialization.Serialization.PBValue) {
          return mergeFrom((com.memstore.serialization.Serialization.PBValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.memstore.serialization.Serialization.PBValue other) {
        if (other == com.memstore.serialization.Serialization.PBValue.getDefaultInstance()) return this;
        if (other.hasString()) {
          setString(other.getString());
        }
        if (other.hasInt()) {
          setInt(other.getInt());
        }
        if (other.hasLong()) {
          setLong(other.getLong());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setString(input.readString());
              break;
            }
            case 16: {
              setInt(input.readInt32());
              break;
            }
            case 24: {
              setLong(input.readInt64());
              break;
            }
          }
        }
      }
      
      
      // optional string string = 1;
      public boolean hasString() {
        return result.hasString();
      }
      public java.lang.String getString() {
        return result.getString();
      }
      public Builder setString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasString = true;
        result.string_ = value;
        return this;
      }
      public Builder clearString() {
        result.hasString = false;
        result.string_ = getDefaultInstance().getString();
        return this;
      }
      
      // optional int32 int = 2;
      public boolean hasInt() {
        return result.hasInt();
      }
      public int getInt() {
        return result.getInt();
      }
      public Builder setInt(int value) {
        result.hasInt = true;
        result.int_ = value;
        return this;
      }
      public Builder clearInt() {
        result.hasInt = false;
        result.int_ = 0;
        return this;
      }
      
      // optional int64 long = 3;
      public boolean hasLong() {
        return result.hasLong();
      }
      public long getLong() {
        return result.getLong();
      }
      public Builder setLong(long value) {
        result.hasLong = true;
        result.long_ = value;
        return this;
      }
      public Builder clearLong() {
        result.hasLong = false;
        result.long_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.memstore.PBValue)
    }
    
    static {
      defaultInstance = new PBValue(true);
      com.memstore.serialization.Serialization.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.memstore.PBValue)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBEntity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBEntity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBEntityManager_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBEntityManager_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBEntityData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBEntityData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBMetaData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBMetaData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBStringIntPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBStringIntPair_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBEntityTimeline_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBEntityTimeline_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBEntityTimelineValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBEntityTimelineValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_Tombstone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_Tombstone_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_memstore_PBValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_memstore_PBValue_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023serialization.proto\022\014com.memstore\"/\n\010P" +
      "BEntity\022\016\n\006bitmap\030\002 \002(\r\022\023\n\013poolIndexes\030\003" +
      " \003(\r\"A\n\017PBEntityManager\022.\n\nentityData\030\001 " +
      "\003(\0132\032.com.memstore.PBEntityData\"\265\001\n\014PBEn" +
      "tityData\022*\n\010metaData\030\001 \002(\0132\030.com.memstor" +
      "e.PBMetaData\022\021\n\tkeyColumn\030\002 \002(\t\022.\n\017prima" +
      "ryIndexKey\030\003 \003(\0132\025.com.memstore.PBValue\022" +
      "6\n\016entityTimeline\030\004 \003(\0132\036.com.memstore.P" +
      "BEntityTimeline\"\324\001\n\nPBMetaData\022\014\n\004name\030\001" +
      " \002(\t\0224\n\rcolumnToIndex\030\002 \003(\0132\035.com.memsto",
      "re.PBStringIntPair\0224\n\rindexToColumn\030\003 \003(" +
      "\0132\035.com.memstore.PBStringIntPair\0222\n\013inde" +
      "xToType\030\004 \003(\0132\035.com.memstore.PBStringInt" +
      "Pair\022\030\n\020notPooledColumns\030\005 \003(\t\".\n\017PBStri" +
      "ngIntPair\022\016\n\006string\030\001 \002(\t\022\013\n\003int\030\002 \002(\r\"T" +
      "\n\020PBEntityTimeline\022\014\n\004date\030\001 \003(\004\0222\n\005valu" +
      "e\030\002 \003(\0132#.com.memstore.PBEntityTimelineV" +
      "alue\"k\n\025PBEntityTimelineValue\022*\n\ttombsto" +
      "ne\030\001 \001(\0132\027.com.memstore.Tombstone\022&\n\006ent" +
      "ity\030\002 \001(\0132\026.com.memstore.PBEntity\"\013\n\tTom",
      "bstone\"4\n\007PBValue\022\016\n\006string\030\001 \001(\t\022\013\n\003int" +
      "\030\002 \001(\005\022\014\n\004long\030\003 \001(\003B\034\n\032com.memstore.ser" +
      "ialization"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_memstore_PBEntity_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_memstore_PBEntity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBEntity_descriptor,
              new java.lang.String[] { "Bitmap", "PoolIndexes", },
              com.memstore.serialization.Serialization.PBEntity.class,
              com.memstore.serialization.Serialization.PBEntity.Builder.class);
          internal_static_com_memstore_PBEntityManager_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_memstore_PBEntityManager_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBEntityManager_descriptor,
              new java.lang.String[] { "EntityData", },
              com.memstore.serialization.Serialization.PBEntityManager.class,
              com.memstore.serialization.Serialization.PBEntityManager.Builder.class);
          internal_static_com_memstore_PBEntityData_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_memstore_PBEntityData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBEntityData_descriptor,
              new java.lang.String[] { "MetaData", "KeyColumn", "PrimaryIndexKey", "EntityTimeline", },
              com.memstore.serialization.Serialization.PBEntityData.class,
              com.memstore.serialization.Serialization.PBEntityData.Builder.class);
          internal_static_com_memstore_PBMetaData_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_memstore_PBMetaData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBMetaData_descriptor,
              new java.lang.String[] { "Name", "ColumnToIndex", "IndexToColumn", "IndexToType", "NotPooledColumns", },
              com.memstore.serialization.Serialization.PBMetaData.class,
              com.memstore.serialization.Serialization.PBMetaData.Builder.class);
          internal_static_com_memstore_PBStringIntPair_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_memstore_PBStringIntPair_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBStringIntPair_descriptor,
              new java.lang.String[] { "String", "Int", },
              com.memstore.serialization.Serialization.PBStringIntPair.class,
              com.memstore.serialization.Serialization.PBStringIntPair.Builder.class);
          internal_static_com_memstore_PBEntityTimeline_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_memstore_PBEntityTimeline_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBEntityTimeline_descriptor,
              new java.lang.String[] { "Date", "Value", },
              com.memstore.serialization.Serialization.PBEntityTimeline.class,
              com.memstore.serialization.Serialization.PBEntityTimeline.Builder.class);
          internal_static_com_memstore_PBEntityTimelineValue_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_memstore_PBEntityTimelineValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBEntityTimelineValue_descriptor,
              new java.lang.String[] { "Tombstone", "Entity", },
              com.memstore.serialization.Serialization.PBEntityTimelineValue.class,
              com.memstore.serialization.Serialization.PBEntityTimelineValue.Builder.class);
          internal_static_com_memstore_Tombstone_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_memstore_Tombstone_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_Tombstone_descriptor,
              new java.lang.String[] { },
              com.memstore.serialization.Serialization.Tombstone.class,
              com.memstore.serialization.Serialization.Tombstone.Builder.class);
          internal_static_com_memstore_PBValue_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_memstore_PBValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_memstore_PBValue_descriptor,
              new java.lang.String[] { "String", "Int", "Long", },
              com.memstore.serialization.Serialization.PBValue.class,
              com.memstore.serialization.Serialization.PBValue.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
